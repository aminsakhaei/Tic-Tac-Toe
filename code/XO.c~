
#include <io.h>
#include <mega64.h>
#include <alcd.h>
#include <stdio.h>
#include <delay.h>

int key,game[9]={0},sum[8]={0},player,state,count,i,x,y,j,f=0,s;

int get_key(void){
delay_ms(10);
//0 , 1 , 2 , 10(START)
PORTC=0B11111110;
if(PINC.7==0){
delay_ms(10);
if(PINC.7==0)
while(!PINC.7){}
return 0;
}
if(PINC.6==0){
delay_ms(10);
if(PINC.6==0)
while(!PINC.6){}
return 1;
}
if(PINC.5==0){
delay_ms(10);
if(PINC.5==0)
while(!PINC.5){}
return 2;
}
if(PINC.4==0){
delay_ms(10);
if(PINC.4==0)
while(!PINC.4){}
return 10;
}

//3 , 4 , 5, 11(PAUS)
delay_ms(10);
PORTC=0B11111101;
if(PINC.7==0){
delay_ms(10);
if(PINC.7==0)
while(!PINC.7){}
return 3;
}
if(PINC.6==0){
delay_ms(10);
if(PINC.6==0)
while(!PINC.6){}
return 4;
}
if(PINC.5==0){
delay_ms(10);
if(PINC.5==0)
while(!PINC.5){}
return 5;
}
if(PINC.4==0){
delay_ms(10);
if(PINC.4==0)
while(!PINC.4){}
return 11;
}

//6 , 7 , 8 , 12(RESTART)
delay_ms(10);
PORTC=0B11111011;
if(PINC.7==0){
delay_ms(10);
if(PINC.7==0)
while(!PINC.7){}
return 6;
}
if(PINC.6==0){
delay_ms(10);
if(PINC.6==0)
while(!PINC.6){}
return 7;
}
if(PINC.5==0){
delay_ms(10);
if(PINC.5==0)
while(!PINC.5){}
return 8;
}
if(PINC.4==0){
delay_ms(10);
if(PINC.4==0)
while(!PINC.4){}
return 12;
}

//16(UNDO) , 15(GIVE UP) , 14(TURN) , 13(STOP)
delay_ms(10);
PORTC=0B11110111;
if(PINC.7==0){
delay_ms(10);
if(PINC.7==0)
while(!PINC.7){}
return 16;
}
if(PINC.6==0){
delay_ms(10);
if(PINC.6==0)
while(!PINC.6){}
return 15;
}
if(PINC.5==0){
delay_ms(10);
if(PINC.5==0)
while(!PINC.5){}
return 14;
}
if(PINC.4==0){
delay_ms(10);
if(PINC.4==0)
while(!PINC.4){}
return 13;
}

}

//Initialing
void get_started(int k){
if(k==1){              //k=1:STOP KEY
lcd_clear();
lcd_gotoxy(0,0);
lcd_puts("Ready");
lcd_gotoxy(7,1);
lcd_puts("to");
lcd_gotoxy(11,2);
lcd_puts("Start");
while(key!=10){
key=get_key();
}
}
player=0;
state=0;
count=0;
f=0;
for(i=0;i<9;i++){
    game[i]=0;
    }
    
}

void show(){
lcd_clear();
x=y=0;
if(f==1){                   //f=1:TURN KEY
    if(player==0){
    lcd_gotoxy(9,1);
    lcd_puts("X Turn");
    }
    else{
    lcd_gotoxy(9,1);
    lcd_puts("O Turn");
    }
}
 
for(i=0;i<9;i++)
    {
    if(i%3==0 && i!=0){
        y+=1;
        x=0;
        }
    lcd_gotoxy(x,y);
    switch (game[i]){                                 
    case 0:                                  
    lcd_putchar('-');
    break;
    
    case 1:                                   
    lcd_putchar('X');
    break;
    
    case -1:                                   
    lcd_putchar('O');
    break;
    }
    x++;
    }
}

void winner_check(){
sum[0]=game[0]+game[1]+game[2];
sum[1]=game[3]+game[4]+game[5];
sum[2]=game[6]+game[7]+game[8];
sum[3]=game[0]+game[3]+game[6];
sum[4]=game[1]+game[4]+game[7];
sum[5]=game[2]+game[5]+game[8];
sum[6]=game[0]+game[4]+game[8];
sum[7]=game[2]+game[4]+game[6];
}

void main(void)
{
DDRC=0X0F;             //PORTC For Keypad HIGH Nibble Input,Low Nibble Output
PORTC=0XF0;            //PORTC For Keypad HIGH Nibble Input,Pull-Up Low Nibble Output Zero

DDRE=0xF7;             //PORTD Output

lcd_init(16);

get_started(1);

Label:
while(state==0){
    key=get_key();
    if(key==11){        //PAUSE
    j=0;
    while(j==0){
    key=get_key();
    if(key==11)
        j=1;
    }}
    
    else if(key==12){   //RESTART
    get_started(0);
    }
    
    else if(key==13){   //STOP
    get_started(1);
    }
    
    else if(key==14){   //TURN
    f=1;
    }
    
    else if(key==15){   //GIVE UP
        if(player==0)
            state=-1;
        else
            state=1;
    }
    
    else if(key==16){   //UNDO
        player=!player;
        game[s]=0;
    }
    
    if(key<9){
        if(game[key]==0){
            s=key;
            switch (player){                                
            case 0:                                  
            game[key]=1;
            break;
                                            
            case 1:                                  
            game[key]=-1;
            break;        
            }
            count++;
            player=!player;
     }   }
show();

winner_check();

for(i=0;i<8;i++){
if(sum[i]==3)
    state=1;
    
else if(sum[i]==-3)
    state=-1;
    
if(count==9 && state==0)
    state=2;
}

lcd_gotoxy(4,3);
switch (state){                                
    case -1:                                  
    lcd_puts("O WINNER!");
    break;
    
    case 1:                                  
    lcd_puts("X WINNER!");
    break;
    
    case 2:                                  
    lcd_puts("Game Over.");
    break;
    }
}

while (1)
    {
    key=get_key();
    if(key==12){
        get_started(0);
        f=0;
        goto Label;
    }
    if(key==13){
        get_started(1);
        f=0;
        goto Label;
    }
    }
}
